
@{
    ViewData["Title"] = "Blog";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section css {
    <link href="~/css/Blog/blog.min.css" rel="stylesheet" />
}

<div class="alert alert-info show" id="connectionstatus"></div>






<!-- END PAGE HEADER-->
<div class="blog-page blog-content-1">
    <div class="row blog-list">

        <script id="blog-card" type="text/template">
            <div class="col-lg-6" id="divPost">

                <div class="blog-post-lg bordered blog-container">
                    <div class="blog-img-thumb">
                        <a href="javascript:;">
                            <img src="{{blog-imagem}}" />
                        </a>
                    </div>
                    <div class="alert alert-info show" id="connectionstatus"></div>
                    <div class="blog-post-content">
                        <h2 class="blog-title blog-post-title">
                            <a href="javascript:;">{{PostId}} - {{Title}}</a>
                        </h2>
                        <p class="blog-post-desc">
                            {{ShortDescription}}
                        </p>
                    </div>

                    <div class="row">
                        <div class="col-lg-6">
                            <button onclick="pageEvents.loadBlogPost('{{Link}}');" class="btn btn-primary col-6 col-xs-offset-1">Visualizar</button>
                        </div>
                    </div>

                </div>
            </div>
        </script>
    </div>

    <div class="center">
        <button class="btn btn-danger" onclick="pageEvents.loadMoreBlogPosts();">
            ver mais
        </button>
        <br /><br />
    </div>
</div>
<!-- END CONTENT BODY -->

<div id="blog-item-container"></div>


    <script id="blog-item-not-found" type="text/template">
        <div class="modal fade" id="blog-item-modal" tabindex="-1" role="dialog" aria-labelledby="myModal-label">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="myModal-label">Offiline</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    </div>
                    <div class="modal-body">
                        <h1>
                            Ups, artigo não está no Cache!
                        </h1>
                        <div>
                            Você quer que a gente continue tentando fazer download do artigo em plano de fundo e te avise quando estiver disponível?
                        </div>
                        <br />
                        <button class="btn btn-success download-start" onclick="pageEvents.setBackgroundFetch('{{Link}}');">Sim!</button>
                        <div id="status-download" style="display:none;">
                            <div class="progress">
                                <div class="progress-bar" role="progressbar" style="width:0%"></div>
                            </div>
                            <div class="text-success">
                                <p>pronto!</p>
                                <button class="btn btn-success" onclick="pageEvents.loadBlogPost('{{Link}}');">ler!</button>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Fechar</button>
                    </div>
                </div>
            </div>
        </div>

</script>

<script id="blog-item-found" type="text/template">
    <div class="modal fade" id="blog-item-modal" tabindex="-1" role="dialog" aria-labelledby="myModal-label">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModal-label">{{Title}}</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">

                    <div class="blog-img-thumb">
                        <img src="{{Image}}" alt="{{Title}}" class="col-lg-12" />
                    </div>

                    <hr />

                    <div id="{{Link}}">
                        <div class="form-group">
                            <label class="control-label" for="form-group-input">Post</label>
                        </div>
                        <hr />

                        {{Content}}
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
</script>


<div class="create-profile">

    <h2>Como acessar algumas funções Nativas do Celular?</h2>
    <br />        <br />
    <div>
        Camera: <input type="file" accept="image/*" capture="camera" />
        <br />        <br />
    </div>
    <div>
        Gravação: <input type="file" accept="video/*" capture="camcorder">
        <br />        <br />
    </div>
    <div>
        Microfone: <input type="file" accept="audio/*" capture="microphone">
        <br />        <br />
    </div>
    <div>
        <button onclick="getGeolocation();" type="button" class="btn btn-primary" id="address-button">Clique aqui para obter seu Endereço</button>
        <br /><br />
    </div>
    <div>
        <div id="address-found-input" style="display:none;">Cidade/Estado: <input id="address-found" type="text" /></div>
        <br />        <br />
    </div>
    <div>
        <button type="button" id="vibrar-celular" onclick="vibrate();" class="btn btn-primary">Vibrar celular</button>
        <br />        <br />
    </div>
    <div>
        <canvas id="canvas" width="300" height="300" style="border: 1px solid black;"></canvas>
        <div id="rotation-info"></div>
        <br /><br />
    </div>
</div>


<script type="text/javascript">
    var GOOGLE_MAP_KEY = 'AIzaSyDkokSgwFgLELGKOW5xxDVNhYNBCzJSo_c';
    const canvas = document.getElementById('canvas');
    const ctx = canvas.getContext('2d');

    if ('LinearAccelerationSensor' in window && 'Gyroscope' in window) {

        let gyroscope = new Gyroscope();
        gyroscope.addEventListener('reading', e => rotationHandler({
            alpha: gyroscope.x,
            beta: gyroscope.y,
            gamma: gyroscope.z
        }));
        gyroscope.start();
    }

    function rotationHandler(rotation) {
        var info, xyz = "[X, Y, Z]";

        var alpha; var beta; var gamma;
        if (rotation.alpha && rotation.beta && rotation.gamma) {
            alpha = rotation.alpha.toFixed(2) * 100;
            beta = rotation.beta.toFixed(2) * 100;
            gamma = rotation.gamma.toFixed(2) * 100;
        }

        info = xyz.replace("X", alpha);
        info = info.replace("Y", beta);
        info = info.replace("Z", gamma);
        $('#rotation-info').html(info);

        ctx.fillStyle = 'green';
        ctx.fillRect(100, 100, alpha, 10);

        ctx.fillStyle = 'yellow';
        ctx.fillRect(120, 120, beta, 10);

        ctx.fillStyle = 'blue';
        ctx.fillRect(140, 140, gamma, 10);

        var interval = setInterval(function () {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
        }, 50000);
    }

    function ipLookUp() {
        $.ajax('http://ip-api.com/json')
            .then(
                function success(response) {
                    console.log('User\'s Location Data is ', response);
                    console.log('User\'s Country', response.country);
                },

                function fail(data, status) {
                    console.log('Request failed.  Returned status of',
                        status);
                }
            );
    }

    function getAddress(latitude, longitude) {

        var url = 'https://maps.googleapis.com/maps/api/geocode/json?latlng='
            + latitude + ',' + longitude + '&key=' + GOOGLE_MAP_KEY;

        console.log("url:" + url);

        $.ajax(url)
            .then(
                function success(response) {

                    if (response === undefined || response.results === undefined) return;

                    var dataFromCity = response.results.find(obj => { return obj.types.includes('locality'); });
                    $('#address-found').val(dataFromCity.formatted_address);
                    $('#address-button').hide();
                    $('#address-found-input').show();

                    console.log('User\'s Address Data is ' + response);
                },
                function fail(status) {
                    console.log('Request failed.  Returned status of' + status);
                }
            )
    }

    function getGeolocation() {
        if ("geolocation" in navigator) {
            // check if geolocation is supported/enabled on current browser
            navigator.geolocation.getCurrentPosition(
                function success(position) {
                    // for when getting location is a success
                    console.log('latitude ' + position.coords.latitude +
                        ' longitude ' + position.coords.longitude);

                    getAddress(position.coords.latitude, position.coords.longitude);
                },
                function error(error_message) {
                    // for when getting location results in an error
                    console.log('An error has occured while retrieving location ' + error_message);
                    ipLookUp();
                });
        } else {
            // geolocation is not supported
            // get your location some other way
            console.log('geolocation is not enabled on this browser');
            ipLookUp();
        }
    }

    function vibrate() {
        if ("vibrate" in navigator) {
            // vibration API supported
            navigator.vibrate = navigator.vibrate || navigator.webkitVibrate || navigator.mozVibrate || navigator.msVibrate;
            navigator.vibrate([1000]);
        }
    }

</script>